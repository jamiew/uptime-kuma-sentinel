name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  claude-review:
    if: |
      (github.event_name == 'pull_request') ||
      (github.event_name == 'issue_comment' &&
       github.event.issue.pull_request &&
       contains(github.event.comment.body, '/claude-review'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          separator: ","

      - name: Create review comment
        if: steps.changed-files.outputs.all_changed_files != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request || (await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            })).data;

            const changedFiles = '${{ steps.changed-files.outputs.all_changed_files }}'.split(',');

            // Create a sticky comment identifier
            const identifier = '<!-- claude-review-marker -->';

            // Find existing sticky comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number
            });

            const existingComment = comments.data.find(c => c.body?.includes(identifier));

            // Prepare review message
            const reviewBody = `${identifier}
            ## ðŸ¤– Claude Review Required

            **Changed Files:** ${changedFiles.length}
            \`\`\`
            ${changedFiles.join('\n')}
            \`\`\`

            ### Review Checklist:
            - [ ] TypeScript types are properly defined
            - [ ] Tests cover new functionality
            - [ ] No console.logs or debugging code
            - [ ] Error handling is comprehensive
            - [ ] Code follows project conventions
            - [ ] Performance considerations addressed
            - [ ] Security best practices followed

            ---
            *To trigger a new review, comment \`/claude-review\`*`;

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: reviewBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: reviewBody
              });
            }

  auto-merge:
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    needs: claude-review
    runs-on: ubuntu-latest
    steps:
      - name: Auto-merge Dependabot PRs
        uses: ahmadnassri/action-dependabot-auto-merge@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          target: minor